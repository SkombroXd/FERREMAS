// source: producto.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.exportSymbol('proto.productos.CrearProductoRequest', null, global);
goog.exportSymbol('proto.productos.CrearProductoResponse', null, global);
goog.exportSymbol('proto.productos.ListarProductosRequest', null, global);
goog.exportSymbol('proto.productos.ListarProductosResponse', null, global);
goog.exportSymbol('proto.productos.Producto', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productos.CrearProductoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productos.CrearProductoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productos.CrearProductoRequest.displayName = 'proto.productos.CrearProductoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productos.CrearProductoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productos.CrearProductoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productos.CrearProductoResponse.displayName = 'proto.productos.CrearProductoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productos.ListarProductosRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productos.ListarProductosRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productos.ListarProductosRequest.displayName = 'proto.productos.ListarProductosRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productos.Producto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productos.Producto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productos.Producto.displayName = 'proto.productos.Producto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productos.ListarProductosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productos.ListarProductosResponse.repeatedFields_, null);
};
goog.inherits(proto.productos.ListarProductosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productos.ListarProductosResponse.displayName = 'proto.productos.ListarProductosResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productos.CrearProductoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productos.CrearProductoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productos.CrearProductoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.CrearProductoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
codProducto: jspb.Message.getFieldWithDefault(msg, 1, ""),
nombreP: jspb.Message.getFieldWithDefault(msg, 2, ""),
precioP: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
unidadesP: jspb.Message.getFieldWithDefault(msg, 4, 0),
imagen: msg.getImagen_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productos.CrearProductoRequest}
 */
proto.productos.CrearProductoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productos.CrearProductoRequest;
  return proto.productos.CrearProductoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productos.CrearProductoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productos.CrearProductoRequest}
 */
proto.productos.CrearProductoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodProducto(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNombreP(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrecioP(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnidadesP(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImagen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productos.CrearProductoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productos.CrearProductoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productos.CrearProductoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.CrearProductoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodProducto();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNombreP();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrecioP();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getUnidadesP();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getImagen_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string cod_producto = 1;
 * @return {string}
 */
proto.productos.CrearProductoRequest.prototype.getCodProducto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productos.CrearProductoRequest} returns this
 */
proto.productos.CrearProductoRequest.prototype.setCodProducto = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string nombre_p = 2;
 * @return {string}
 */
proto.productos.CrearProductoRequest.prototype.getNombreP = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productos.CrearProductoRequest} returns this
 */
proto.productos.CrearProductoRequest.prototype.setNombreP = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double precio_p = 3;
 * @return {number}
 */
proto.productos.CrearProductoRequest.prototype.getPrecioP = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productos.CrearProductoRequest} returns this
 */
proto.productos.CrearProductoRequest.prototype.setPrecioP = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 unidades_p = 4;
 * @return {number}
 */
proto.productos.CrearProductoRequest.prototype.getUnidadesP = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.productos.CrearProductoRequest} returns this
 */
proto.productos.CrearProductoRequest.prototype.setUnidadesP = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes imagen = 5;
 * @return {!(string|Uint8Array)}
 */
proto.productos.CrearProductoRequest.prototype.getImagen = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes imagen = 5;
 * This is a type-conversion wrapper around `getImagen()`
 * @return {string}
 */
proto.productos.CrearProductoRequest.prototype.getImagen_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImagen()));
};


/**
 * optional bytes imagen = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagen()`
 * @return {!Uint8Array}
 */
proto.productos.CrearProductoRequest.prototype.getImagen_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImagen()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.productos.CrearProductoRequest} returns this
 */
proto.productos.CrearProductoRequest.prototype.setImagen = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productos.CrearProductoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.productos.CrearProductoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productos.CrearProductoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.CrearProductoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
exito: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
mensaje: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productos.CrearProductoResponse}
 */
proto.productos.CrearProductoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productos.CrearProductoResponse;
  return proto.productos.CrearProductoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productos.CrearProductoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productos.CrearProductoResponse}
 */
proto.productos.CrearProductoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExito(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMensaje(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productos.CrearProductoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productos.CrearProductoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productos.CrearProductoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.CrearProductoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExito();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMensaje();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool exito = 1;
 * @return {boolean}
 */
proto.productos.CrearProductoResponse.prototype.getExito = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productos.CrearProductoResponse} returns this
 */
proto.productos.CrearProductoResponse.prototype.setExito = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string mensaje = 2;
 * @return {string}
 */
proto.productos.CrearProductoResponse.prototype.getMensaje = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productos.CrearProductoResponse} returns this
 */
proto.productos.CrearProductoResponse.prototype.setMensaje = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productos.ListarProductosRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productos.ListarProductosRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productos.ListarProductosRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.ListarProductosRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productos.ListarProductosRequest}
 */
proto.productos.ListarProductosRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productos.ListarProductosRequest;
  return proto.productos.ListarProductosRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productos.ListarProductosRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productos.ListarProductosRequest}
 */
proto.productos.ListarProductosRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productos.ListarProductosRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productos.ListarProductosRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productos.ListarProductosRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.ListarProductosRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productos.Producto.prototype.toObject = function(opt_includeInstance) {
  return proto.productos.Producto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productos.Producto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.Producto.toObject = function(includeInstance, msg) {
  var f, obj = {
codProducto: jspb.Message.getFieldWithDefault(msg, 1, ""),
nombreP: jspb.Message.getFieldWithDefault(msg, 2, ""),
precioP: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
unidadesP: jspb.Message.getFieldWithDefault(msg, 4, 0),
imagen: msg.getImagen_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productos.Producto}
 */
proto.productos.Producto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productos.Producto;
  return proto.productos.Producto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productos.Producto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productos.Producto}
 */
proto.productos.Producto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodProducto(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNombreP(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrecioP(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnidadesP(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImagen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productos.Producto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productos.Producto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productos.Producto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.Producto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodProducto();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNombreP();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrecioP();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getUnidadesP();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getImagen_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string cod_producto = 1;
 * @return {string}
 */
proto.productos.Producto.prototype.getCodProducto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productos.Producto} returns this
 */
proto.productos.Producto.prototype.setCodProducto = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string nombre_p = 2;
 * @return {string}
 */
proto.productos.Producto.prototype.getNombreP = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productos.Producto} returns this
 */
proto.productos.Producto.prototype.setNombreP = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double precio_p = 3;
 * @return {number}
 */
proto.productos.Producto.prototype.getPrecioP = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productos.Producto} returns this
 */
proto.productos.Producto.prototype.setPrecioP = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 unidades_p = 4;
 * @return {number}
 */
proto.productos.Producto.prototype.getUnidadesP = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.productos.Producto} returns this
 */
proto.productos.Producto.prototype.setUnidadesP = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes imagen = 5;
 * @return {!(string|Uint8Array)}
 */
proto.productos.Producto.prototype.getImagen = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes imagen = 5;
 * This is a type-conversion wrapper around `getImagen()`
 * @return {string}
 */
proto.productos.Producto.prototype.getImagen_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImagen()));
};


/**
 * optional bytes imagen = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagen()`
 * @return {!Uint8Array}
 */
proto.productos.Producto.prototype.getImagen_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImagen()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.productos.Producto} returns this
 */
proto.productos.Producto.prototype.setImagen = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productos.ListarProductosResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productos.ListarProductosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.productos.ListarProductosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productos.ListarProductosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.ListarProductosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
productosList: jspb.Message.toObjectList(msg.getProductosList(),
    proto.productos.Producto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productos.ListarProductosResponse}
 */
proto.productos.ListarProductosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productos.ListarProductosResponse;
  return proto.productos.ListarProductosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productos.ListarProductosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productos.ListarProductosResponse}
 */
proto.productos.ListarProductosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.productos.Producto;
      reader.readMessage(value,proto.productos.Producto.deserializeBinaryFromReader);
      msg.addProductos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productos.ListarProductosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productos.ListarProductosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productos.ListarProductosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productos.ListarProductosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.productos.Producto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Producto productos = 1;
 * @return {!Array<!proto.productos.Producto>}
 */
proto.productos.ListarProductosResponse.prototype.getProductosList = function() {
  return /** @type{!Array<!proto.productos.Producto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.productos.Producto, 1));
};


/**
 * @param {!Array<!proto.productos.Producto>} value
 * @return {!proto.productos.ListarProductosResponse} returns this
*/
proto.productos.ListarProductosResponse.prototype.setProductosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.productos.Producto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.productos.Producto}
 */
proto.productos.ListarProductosResponse.prototype.addProductos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.productos.Producto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productos.ListarProductosResponse} returns this
 */
proto.productos.ListarProductosResponse.prototype.clearProductosList = function() {
  return this.setProductosList([]);
};


