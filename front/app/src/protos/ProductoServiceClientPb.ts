/**
 * @fileoverview gRPC-Web generated client stub for productos
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.31.1
// source: producto.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as producto_pb from './producto_pb'; // proto import: "producto.proto"


export class ProductoServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCrearProducto = new grpcWeb.MethodDescriptor(
    '/productos.ProductoService/CrearProducto',
    grpcWeb.MethodType.UNARY,
    producto_pb.CrearProductoRequest,
    producto_pb.CrearProductoResponse,
    (request: producto_pb.CrearProductoRequest) => {
      return request.serializeBinary();
    },
    producto_pb.CrearProductoResponse.deserializeBinary
  );

  crearProducto(
    request: producto_pb.CrearProductoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<producto_pb.CrearProductoResponse>;

  crearProducto(
    request: producto_pb.CrearProductoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: producto_pb.CrearProductoResponse) => void): grpcWeb.ClientReadableStream<producto_pb.CrearProductoResponse>;

  crearProducto(
    request: producto_pb.CrearProductoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: producto_pb.CrearProductoResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/productos.ProductoService/CrearProducto',
        request,
        metadata || {},
        this.methodDescriptorCrearProducto,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/productos.ProductoService/CrearProducto',
    request,
    metadata || {},
    this.methodDescriptorCrearProducto);
  }

  methodDescriptorListarProductos = new grpcWeb.MethodDescriptor(
    '/productos.ProductoService/ListarProductos',
    grpcWeb.MethodType.UNARY,
    producto_pb.ListarProductosRequest,
    producto_pb.ListarProductosResponse,
    (request: producto_pb.ListarProductosRequest) => {
      return request.serializeBinary();
    },
    producto_pb.ListarProductosResponse.deserializeBinary
  );

  listarProductos(
    request: producto_pb.ListarProductosRequest,
    metadata?: grpcWeb.Metadata | null): Promise<producto_pb.ListarProductosResponse>;

  listarProductos(
    request: producto_pb.ListarProductosRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: producto_pb.ListarProductosResponse) => void): grpcWeb.ClientReadableStream<producto_pb.ListarProductosResponse>;

  listarProductos(
    request: producto_pb.ListarProductosRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: producto_pb.ListarProductosResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/productos.ProductoService/ListarProductos',
        request,
        metadata || {},
        this.methodDescriptorListarProductos,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/productos.ProductoService/ListarProductos',
    request,
    metadata || {},
    this.methodDescriptorListarProductos);
  }

}

